{"version":3,"sources":["components/base-components/temp.jsx","components/base-components/usage.jsx","components/cpu-components/core.jsx","components/cpu.jsx","components/base-components/progress.jsx","components/gpu.jsx","components/nicehash.jsx","components/main.jsx","App.js","reportWebVitals.js","theme.js","index.js"],"names":["getColor","val","green","yellow","red","Temp","props","Box","position","display","style","transform","CircularProgress","variant","value","color","grey","top","left","bottom","right","alignItems","justifyContent","flexDirection","Typography","component","Math","round","TeUsagemp","makeStyles","root","border","alignContent","padding","minWidth","minHeight","textAlign","CPU","name","temp","load","clock","power","cores","className","toFixed","marginTop","size","Progress","width","mr","LinearProgress","caption","GPU","coreClock","memClock","memUsed","memTotal","Nicehash","data","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","miningRigs","map","r","scope","stats","algorithm","description","speedAccepted","profitability","Main","useState","setData","nicehashData","setNicehashData","useEffect","socket","socketIOClient","on","console","log","objs","hw","hardwareType","report","find","includes","split","sensors","Temperature","Load","Clock","Power","i","push","SmallData","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","type","primary","main","purple","secondary","error","A400","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.5e1977c5.chunk.js","sourcesContent":["import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { green, yellow, red, grey } from '@material-ui/core/colors';\r\nfunction getColor(val) {\r\n    if (val < 60) return green[300]\r\n    else if (val >= 60 && val < 85) return yellow[300]\r\n    else if (val >= 85) return red[300]\r\n}\r\n\r\nexport default function Temp(props) {\r\n    return (\r\n        <Box position=\"relative\" display=\"inline-flex\">\r\n            <div style={{ transform: 'rotate(-180deg)' }}>\r\n                <CircularProgress variant=\"determinate\" {...props} value={100} style={{ color: grey[700], position: 'absolute' }} />\r\n                <CircularProgress variant=\"determinate\" {...props} style={{ color: getColor(props.value) }} />\r\n            </div>\r\n            <Box\r\n                top={0}\r\n                left={0}\r\n                bottom={0}\r\n                right={0}\r\n                position=\"absolute\"\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                flexDirection=\"column\"\r\n            >\r\n                <Typography variant=\"h6\" component=\"div\" color=\"textPrimary\">Temp</Typography>\r\n                <Typography variant=\"h4\" component=\"div\" style={{color: getColor(props.value)}}>{Math.round(props.value)}Â°C</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {grey, green, yellow, red } from '@material-ui/core/colors';\r\nfunction getColor(val) {\r\n    if (val < 70) return green[300]\r\n    else if (val >= 70 && val < 90) return yellow[300]\r\n    else if (val >= 90) return red[300]\r\n}\r\n\r\nexport default function TeUsagemp(props) {\r\n    return (\r\n        <Box position=\"relative\" display=\"inline-flex\">\r\n            <div style={{ transform: 'rotate(-180deg)' }}>\r\n                <CircularProgress variant=\"determinate\" {...props} value={100} style={{ color: grey[700], position: 'absolute' }} />\r\n                <CircularProgress variant=\"determinate\" {...props} style={{ color: getColor(props.value) }} />\r\n            </div>\r\n            <Box\r\n                top={0}\r\n                left={0}\r\n                bottom={0}\r\n                right={0}\r\n                position=\"absolute\"\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                flexDirection=\"column\"\r\n            >\r\n                <Typography variant=\"h6\" component=\"div\" color=\"textPrimary\">Load</Typography>\r\n                <Typography variant=\"h4\" component=\"div\" style={{color: getColor(props.value)}}>{Math.round(props.value)}%</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}","import { Box, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        border: '1px solid grey',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignContent: 'center',\r\n        alignItems: 'stretch',\r\n        justifyContent: 'center',\r\n        padding: '5px',\r\n        minWidth: '50px',\r\n        minHeight: '20px',\r\n        textAlign: 'center'\r\n    },\r\n  });\r\n\r\nexport default function Core({clock, load, power}) {\r\n    const classes = useStyles();\r\n    return(<Box className={classes.root}>\r\n        <div><Typography variant=\"caption\">{clock.toFixed(0)} MHz</Typography></div>\r\n        <div><Typography variant=\"caption\">{power.toFixed(0)} Watts</Typography></div>\r\n        <div><Typography variant=\"caption\">{load.toFixed(0)}%</Typography></div>\r\n\r\n    </Box>)\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Temp from './base-components/temp'\r\nimport Usage from './base-components/usage'\r\nimport CPUGraphic from './cpu-components/cpu-graphic'\r\n\r\nexport default function CPU({ name, temp, load, clock, power, cores }) {\r\n    return (<div className=\"statsContainer\">\r\n        <Typography variant=\"h5\" component=\"div\">CPU</Typography>\r\n        <Typography variant=\"h5\" component=\"div\">{name}</Typography>\r\n        <Typography variant=\"h6\">{clock.toFixed(0)} MHz</Typography>\r\n        <Typography variant=\"h6\">{power.toFixed(0)} Watts</Typography>\r\n        {/* <div>\r\n            <div className=\"chartContainer\"><CPUGraphic cores={cores} /></div>\r\n        </div> */}\r\n\r\n        <Box marginTop=\"auto\">\r\n            <div className=\"chartContainer\">\r\n                <Temp\r\n                    variant=\"determinate\"\r\n                    value={temp}\r\n                    size={125}\r\n                />\r\n            </div>\r\n            <div className=\"chartContainer\">\r\n                <Usage\r\n                    variant=\"determinate\"\r\n                    value={load}\r\n                    size={125}\r\n                />\r\n            </div>\r\n        </Box>\r\n\r\n    </div>)\r\n}","import React from 'react';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Progress(props) {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box minWidth={125}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{props.caption}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport MemProgress from './base-components/progress'\r\nimport Temp from './base-components/temp'\r\nimport Usage from './base-components/usage'\r\n\r\nexport default function GPU({ name, temp, load, coreClock, memClock, memUsed, memTotal }) {\r\n    return (<div className=\"statsContainer\">\r\n        <div><Typography variant=\"h5\">GPU</Typography></div>\r\n        <div><Typography variant=\"h5\">{name}</Typography></div>\r\n        <div><span className=\"sub\">Core: {coreClock.toFixed(0)} MHz</span></div>\r\n        <div><span className=\"sub\">Mem: {memClock.toFixed(0)} MHz</span></div>\r\n        <div style={{width: '80%'}}>\r\n            <Typography variant=\"h6\">VRAM</Typography>\r\n            <MemProgress variant=\"determinate\" value={memUsed / memTotal * 100} caption={`${(memUsed/1000).toFixed(2)}/${(memTotal/1000).toFixed(2)} GB (${Math.round(memUsed / memTotal * 100)}%)`}/>\r\n        </div>\r\n\r\n        <Box marginTop=\"auto\">\r\n            <div className=\"chartContainer\">\r\n                <Temp\r\n                    variant=\"determinate\"\r\n                    value={temp}\r\n                    size={125}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"chartContainer\">\r\n                <Usage\r\n                    variant=\"determinate\"\r\n                    value={load}\r\n                    size={125}\r\n                />\r\n            </div>\r\n        </Box>\r\n\r\n    </div>)\r\n}","import { Typography, Box, TableContainer, TableHead, TableRow, TableCell, TableBody, Table, Paper } from '@material-ui/core';\r\n\r\nexport default function Nicehash({ data }) {\r\n    return (<div className=\"statsContainer\">\r\n        <Typography variant=\"h6\">Mining Stats</Typography>\r\n        {/* <Typography variant=\"h6\">Wallet Address: {data.btcAddress}</Typography> */}\r\n        <Box>\r\n            <TableContainer component={Paper}>\r\n                <Table size=\"small\" aria-label=\"a dense table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell align=\"right\">Algorithm</TableCell>\r\n                            <TableCell align=\"right\">Speed</TableCell>\r\n                            <TableCell align=\"right\">Profitability</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {data.miningRigs ? data.miningRigs.map((r) => (\r\n                            <TableRow key={r.name}>\r\n                                <TableCell component=\"th\" scope=\"row\">{r.name}</TableCell>\r\n                                <TableCell align=\"right\">{r.stats[0].algorithm.description}</TableCell>\r\n                                <TableCell align=\"right\">{r.stats[0].speedAccepted.toFixed(2)} MH/s</TableCell>\r\n                                <TableCell align=\"right\">{r.profitability.toFixed(10)} BTC/24 hours</TableCell>\r\n                            </TableRow>\r\n                        )) : null}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Box>\r\n    </div>)\r\n}","import React, { useState, useEffect } from 'react';\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nimport CPU from './cpu';\r\nimport GPU from './gpu';\r\nimport RAM from './ram';\r\nimport HDD from './hdd'\r\nimport Nicehash from './nicehash'\r\n\r\nconst ENDPOINT = \"http://localhost:23465\";\r\n\r\nexport default function Main() {\r\n    const [data, setData] = useState()\r\n    const [nicehashData, setNicehashData] = useState()\r\n\r\n    useEffect(() => {\r\n        const socket = socketIOClient(ENDPOINT);\r\n        socket.on(\"connect\", () => {\r\n            console.log('connected')\r\n        })\r\n\r\n        socket.on('nicehash', (data) => {\r\n            console.log(data)\r\n            setNicehashData(data)\r\n        })\r\n\r\n        socket.on(\"stats\", (data) => {\r\n            setData(data)\r\n        })\r\n    }, []);\r\n\r\n    var objs = []\r\n\r\n    if (data) {\r\n        for (let hw of data) {\r\n            switch(hw.hardwareType) {\r\n                case 'CPU':\r\n                    var cores = {}\r\n                    var name = hw.report.find(r => r.includes('Name:')).split('Name: ')[1]\r\n                    var temp = hw.sensors.Temperature['CPU Package']\r\n                    var load = hw.sensors.Load['CPU Total']\r\n                    var clock = hw.sensors.Clock['CPU Core #1']\r\n                    var power = hw.sensors.Power['CPU Package']\r\n                    for (let i in hw.sensors.Load) {\r\n                        if (i.includes(\"CPU Core #\")) {\r\n                            cores[i.split(\"CPU Core #\")[1]] = {\r\n                                power: hw.sensors.Load[i],\r\n                                load: hw.sensors.Power[i],\r\n                                clock: hw.sensors.Clock[i],\r\n                            }\r\n                        }\r\n                    }\r\n                    objs.push(<CPU name={name} temp={temp} load={load} clock={clock} power={power} cores={cores}/>)\r\n                    break;\r\n                case 'GpuNvidia':\r\n                    var name = hw.report.find(r => r.includes('Name:')).split('Name: ')[1]\r\n                    var temp = hw.sensors.Temperature['GPU Core']\r\n                    var load = hw.sensors.Load['GPU Core']\r\n                    var coreClock = hw.sensors.Clock['GPU Core']\r\n                    var memClock = hw.sensors.Clock['GPU Memory']\r\n                    var memTotal = hw.sensors.SmallData['GPU Memory Total']\r\n                    var memUsed = hw.sensors.SmallData['GPU Memory Used']\r\n                    objs.push(<GPU name={name} temp={temp} load={load} coreClock={coreClock} memClock={memClock} memUsed={memUsed} memTotal={memTotal}/>)\r\n                    break;\r\n                // case 'RAM': \r\n                //     var memUsed = hw.sensors.Data['Used Memory']\r\n                //     var memAvail = hw.sensors.Data['Available Memory']\r\n                //     var load = hw.sensors.Load['Memory']\r\n                //     objs.push(<RAM memUsed={memUsed} memAvail={memAvail} load={load} />)\r\n                //     break;\r\n                // case 'HDD':\r\n                //     if (!hw.sensors.Load) break;\r\n                //     var id = hw.id.split('/hdd/')[1]\r\n                //     var load = hw.sensors.Load['Used Space']\r\n                //     var temp = hw.sensors.Temperature ? hw.sensors.Temperature.Temperature : null\r\n                //     objs.push(<HDD id={id} load={load} temp={temp}/>)\r\n                //     break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    if (nicehashData) objs.push(<Nicehash data={nicehashData}/>)\r\n\r\n    return (<div className=\"allContainer\">\r\n        {data ? objs : 'No data'}\r\n    </div>)\r\n}","import './App.css';\nimport Main from './components/main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { green, purple, red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: purple[300],\r\n    },\r\n    secondary: {\r\n      main: '#19857b',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}