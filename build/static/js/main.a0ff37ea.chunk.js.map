{"version":3,"sources":["components/base-components/temp.jsx","components/base-components/usage.jsx","components/cpu-components/core.jsx","components/cpu.jsx","components/base-components/progress.jsx","components/gpu.jsx","components/ram.jsx","components/hdd.jsx","components/main.jsx","App.js","reportWebVitals.js","theme.js","index.js"],"names":["getColor","val","green","yellow","red","Temp","props","Box","position","display","style","transform","CircularProgress","variant","value","color","grey","top","left","bottom","right","alignItems","justifyContent","flexDirection","Typography","component","Math","round","TeUsagemp","makeStyles","root","border","alignContent","padding","minWidth","minHeight","textAlign","CPU","name","temp","load","clock","power","cores","className","toFixed","marginTop","size","Progress","width","mr","LinearProgress","caption","GPU","coreClock","memClock","memUsed","memTotal","RAM","memAvail","HDD","id","Main","useState","data","setData","useEffect","socket","socketIOClient","on","console","log","objs","hw","hardwareType","report","find","r","includes","split","sensors","Temperature","Load","Clock","Power","i","push","SmallData","Data","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","type","primary","main","purple","secondary","error","A400","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.a0ff37ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { green, yellow, red, grey } from '@material-ui/core/colors';\r\nfunction getColor(val) {\r\n    if (val < 60) return green[300]\r\n    else if (val >= 60 && val < 85) return yellow[300]\r\n    else if (val >= 85) return red[300]\r\n}\r\n\r\nexport default function Temp(props) {\r\n    return (\r\n        <Box position=\"relative\" display=\"inline-flex\">\r\n            <div style={{ transform: 'rotate(-180deg)' }}>\r\n                <CircularProgress variant=\"determinate\" {...props} value={100} style={{ color: grey[700], position: 'absolute' }} />\r\n                <CircularProgress variant=\"determinate\" {...props} style={{ color: getColor(props.value) }} />\r\n            </div>\r\n            <Box\r\n                top={0}\r\n                left={0}\r\n                bottom={0}\r\n                right={0}\r\n                position=\"absolute\"\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                flexDirection=\"column\"\r\n            >\r\n                <Typography variant=\"subtitle2\" component=\"div\" color=\"textPrimary\">Temp</Typography>\r\n                <Typography variant=\"body1\" component=\"div\" style={{color: getColor(props.value)}}>{Math.round(props.value)}Â°C</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {grey, green, yellow, red } from '@material-ui/core/colors';\r\nfunction getColor(val) {\r\n    if (val < 70) return green[300]\r\n    else if (val >= 70 && val < 90) return yellow[300]\r\n    else if (val >= 90) return red[300]\r\n}\r\n\r\nexport default function TeUsagemp(props) {\r\n    return (\r\n        <Box position=\"relative\" display=\"inline-flex\">\r\n            <div style={{ transform: 'rotate(-180deg)' }}>\r\n                <CircularProgress variant=\"determinate\" {...props} value={100} style={{ color: grey[700], position: 'absolute' }} />\r\n                <CircularProgress variant=\"determinate\" {...props} style={{ color: getColor(props.value) }} />\r\n            </div>\r\n            <Box\r\n                top={0}\r\n                left={0}\r\n                bottom={0}\r\n                right={0}\r\n                position=\"absolute\"\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                flexDirection=\"column\"\r\n            >\r\n                <Typography variant=\"subtitle2\" component=\"div\" color=\"textPrimary\">Load</Typography>\r\n                <Typography variant=\"body1\" component=\"div\" style={{color: getColor(props.value)}}>{Math.round(props.value)}%</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}","import { Box, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        border: '1px solid grey',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignContent: 'center',\r\n        alignItems: 'stretch',\r\n        justifyContent: 'center',\r\n        padding: '5px',\r\n        minWidth: '50px',\r\n        minHeight: '20px',\r\n        textAlign: 'center'\r\n    },\r\n  });\r\n\r\nexport default function Core({clock, load, power}) {\r\n    const classes = useStyles();\r\n    return(<Box className={classes.root}>\r\n        <div><Typography variant=\"caption\">{clock.toFixed(0)} MHz</Typography></div>\r\n        <div><Typography variant=\"caption\">{power.toFixed(0)} Watts</Typography></div>\r\n        <div><Typography variant=\"caption\">{load.toFixed(0)}%</Typography></div>\r\n\r\n    </Box>)\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Temp from './base-components/temp'\r\nimport Usage from './base-components/usage'\r\nimport CPUGraphic from './cpu-components/cpu-graphic'\r\n\r\nexport default function CPU({ name, temp, load, clock, power, cores }) {\r\n    return (<div className=\"statsContainer\">\r\n        <Typography variant=\"h6\" component=\"div\">CPU</Typography>\r\n        <Typography variant=\"h6\" component=\"div\">{name}</Typography>\r\n        <div><span className=\"sub\">{clock.toFixed(0)} MHz</span></div>\r\n        <div><span className=\"sub\">{power.toFixed(0)} Watts</span></div>\r\n        {/* <div>\r\n            <div className=\"chartContainer\"><CPUGraphic cores={cores} /></div>\r\n        </div> */}\r\n\r\n        <Box marginTop=\"auto\">\r\n            <div className=\"chartContainer\">\r\n                <Temp\r\n                    variant=\"determinate\"\r\n                    value={temp}\r\n                    size={125}\r\n                />\r\n            </div>\r\n            <div className=\"chartContainer\">\r\n                <Usage\r\n                    variant=\"determinate\"\r\n                    value={load}\r\n                    size={125}\r\n                />\r\n            </div>\r\n        </Box>\r\n\r\n    </div>)\r\n}","import React from 'react';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Progress(props) {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box minWidth={35}>\r\n                <Typography variant=\"caption\" color=\"textSecondary\">{props.caption}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport MemProgress from './base-components/progress'\r\nimport Temp from './base-components/temp'\r\nimport Usage from './base-components/usage'\r\n\r\nexport default function GPU({ name, temp, load, coreClock, memClock, memUsed, memTotal }) {\r\n    return (<div className=\"statsContainer\">\r\n        <div><Typography variant=\"h6\">GPU</Typography></div>\r\n        <div><Typography variant=\"h6\">{name}</Typography></div>\r\n        <div><span className=\"sub\">Core: {coreClock.toFixed(0)} MHz</span></div>\r\n        <div><span className=\"sub\">Mem: {memClock.toFixed(0)} MHz</span></div>\r\n        <div style={{width: '80%'}}>\r\n            <span className=\"sub\">VRAM</span>\r\n            <MemProgress variant=\"determinate\" value={memUsed / memTotal * 100} caption={`${Math.round(memUsed)}MB/${Math.round(memTotal)}MB`}/>\r\n        </div>\r\n\r\n        <Box marginTop=\"auto\">\r\n            <div className=\"chartContainer\">\r\n                <Temp\r\n                    variant=\"determinate\"\r\n                    value={temp}\r\n                    size={125}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"chartContainer\">\r\n                <Usage\r\n                    variant=\"determinate\"\r\n                    value={load}\r\n                    size={125}\r\n                />\r\n            </div>\r\n        </Box>\r\n\r\n    </div>)\r\n}","import React from 'react';\r\nimport MemProgress from './base-components/progress'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function RAM({ memUsed, memAvail, load }) {\r\n    return (<div className=\"statsContainer\">\r\n        <Typography variant=\"h6\">RAM</Typography>\r\n        <div style={{ width: '80%' }}>\r\n            <MemProgress variant=\"determinate\" value={load} caption={`${Math.round(memUsed * 100)}MB/${Math.round((memUsed + memAvail) * 100)}MB`} />\r\n        </div>\r\n    </div>)\r\n}","import React from 'react';\r\n\r\nimport { Box, Typography } from '@material-ui/core';\r\n\r\nimport Progress from './base-components/progress'\r\n\r\nexport default function HDD({id, load, temp}) {\r\n\r\n    return (<div className=\"statsContainer\">\r\n                <Typography variant=\"body2\">HDD {id}</Typography>\r\n                {temp ? <div><Typography variant=\"caption\">{temp}Â°C</Typography></div>: null}\r\n                {load ? <div className=\"chartContainer\"><Progress variant=\"determinate\" value={load} caption={`${load.toFixed(2)}%`} /></div> : null}\r\n    </div>)\r\n}","import React, { useState, useEffect } from 'react';\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nimport CPU from './cpu';\r\nimport GPU from './gpu';\r\nimport RAM from './ram';\r\nimport HDD from './hdd'\r\n\r\nconst ENDPOINT = \"http://localhost:23465\";\r\n\r\nexport default function Main() {\r\n    const [data, setData] = useState()\r\n\r\n    useEffect(() => {\r\n        const socket = socketIOClient(ENDPOINT);\r\n        socket.on(\"connect\", () => {\r\n            console.log('connected')\r\n        })\r\n\r\n        socket.on(\"stats\", (data) => {\r\n            console.log(data)\r\n            setData(data)\r\n        })\r\n    }, []);\r\n\r\n    var objs = []\r\n\r\n    if (data) {\r\n        for (let hw of data) {\r\n            switch(hw.hardwareType) {\r\n                case 'CPU':\r\n                    var cores = {}\r\n                    var name = hw.report.find(r => r.includes('Name:')).split('Name: ')[1]\r\n                    var temp = hw.sensors.Temperature['CPU Package']\r\n                    var load = hw.sensors.Load['CPU Total']\r\n                    var clock = hw.sensors.Clock['CPU Core #1']\r\n                    var power = hw.sensors.Power['CPU Package']\r\n                    for (let i in hw.sensors.Load) {\r\n                        if (i.includes(\"CPU Core #\")) {\r\n                            cores[i.split(\"CPU Core #\")[1]] = {\r\n                                power: hw.sensors.Load[i],\r\n                                load: hw.sensors.Power[i],\r\n                                clock: hw.sensors.Clock[i],\r\n                            }\r\n                        }\r\n                    }\r\n                    objs.push(<CPU name={name} temp={temp} load={load} clock={clock} power={power} cores={cores}/>)\r\n                    break;\r\n                case 'GpuNvidia':\r\n                    var name = hw.report.find(r => r.includes('Name:')).split('Name: ')[1]\r\n                    var temp = hw.sensors.Temperature['GPU Core']\r\n                    var load = hw.sensors.Load['GPU Core']\r\n                    var coreClock = hw.sensors.Clock['GPU Core']\r\n                    var memClock = hw.sensors.Clock['GPU Memory']\r\n                    var memTotal = hw.sensors.SmallData['GPU Memory Total']\r\n                    var memUsed = hw.sensors.SmallData['GPU Memory Used']\r\n                    objs.push(<GPU name={name} temp={temp} load={load} coreClock={coreClock} memClock={memClock} memUsed={memUsed} memTotal={memTotal}/>)\r\n                    break;\r\n                case 'RAM': \r\n                    var memUsed = hw.sensors.Data['Used Memory']\r\n                    var memAvail = hw.sensors.Data['Available Memory']\r\n                    var load = hw.sensors.Load['Memory']\r\n                    objs.push(<RAM memUsed={memUsed} memAvail={memAvail} load={load} />)\r\n                    break;\r\n                case 'HDD':\r\n                    if (!hw.sensors.Load) break;\r\n                    var id = hw.id.split('/hdd/')[1]\r\n                    var load = hw.sensors.Load['Used Space']\r\n                    var temp = hw.sensors.Temperature ? hw.sensors.Temperature.Temperature : null\r\n                    objs.push(<HDD id={id} load={load} temp={temp}/>)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (<div className=\"allContainer\">\r\n        {data ? objs : 'No data'}\r\n    </div>)\r\n}","import './App.css';\nimport Main from './components/main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { green, purple, red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: purple[300],\r\n    },\r\n    secondary: {\r\n      main: '#19857b',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}